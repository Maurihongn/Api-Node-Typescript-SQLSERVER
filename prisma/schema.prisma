// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ActivationCode {
  codeId         Int       @id @default(autoincrement()) 
  userId         Int       
  code           String    
  isUsed         Boolean?  
  user           User      @relation(fields: [userId], references: [userId])
}

model Category {
  categoryId     Int       @id @default(autoincrement()) 
  name           String    
  description    String?   
  creationDate   DateTime? 
  isActive       Boolean?  
  items          Item[]    
}

model Item {
  itemId         Int       @id @default(autoincrement()) 
  name           String    
  price          Float     
  isActive       Boolean   
  description    String?  
  creationDate   DateTime? 
  categoryId     Int       
  category       Category  @relation(fields: [categoryId], references: [categoryId])
  itemImage      String?   
  orderItems     OrderItem[] 
}

model Order {
  orderId         Int           @id @default(autoincrement()) 
  tableNumber     Int           
  orderStatusId   Int?          
  numberOfPeople  Int?          
  creationDate    DateTime?     
  userId          Int?          
  orderStatus     OrderStatus?  @relation(fields: [orderStatusId], references: [orderStatusId])
  user            User?         @relation(fields: [userId], references: [userId])
  orderItems      OrderItem[]   
  totalPrice      Float?        
}

model OrderItem {
  orderItemId     Int       @id @default(autoincrement()) 
  orderId         Int       
  itemId          Int       
  quantity        Int       
  unitPrice       Float     
  totalPrice      Float     
  order           Order     @relation(fields: [orderId], references: [orderId])
  item            Item      @relation(fields: [itemId], references: [itemId])
}

model OrderStatus {
  orderStatusId  Int     @id @default(autoincrement())  
  statusName     String    
  orders         Order[]   
}

model Reservation {
  reservationId       Int               @id @default(autoincrement()) 
  reservationDate     DateTime?         
  reservationStatusId Int?              
  userId              Int?              
  reservationStatus   ReservationStatus? @relation(fields: [reservationStatusId], references: [reservationStatusId])
  user                User?             @relation(fields: [userId], references: [userId])
}

model ReservationStatus {
  reservationStatusId Int    @id @default(autoincrement())   
  statusName          String    
  reservations        Reservation[] 
}

model Role {
  roleId    Int       @id @default(autoincrement()) 
  roleName  String    
  roleValue String    
  users     User[]    
}

model User {
  userId           Int            @id @default(autoincrement()) 
  email            String         @unique 
  password         String         
  profileImage     String?        
  firstName        String         
  lastName         String         
  address          String?        
  phone            String?        
  birthDate        DateTime?      
  hireDate         DateTime?      
  roleId           Int?           
  salary           Float?         
  isActive         Boolean?       
  activationCodes  ActivationCode[] 
  orders           Order[]          
  reservations     Reservation[]    
  role             Role?            @relation(fields: [roleId], references: [roleId])
}